drop view previous_employee_view ;
drop view employee_view ;
drop view project_employee_view ;
drop view manager_view ;
drop view interim_manager_view ;
drop view president_view ;
drop view current_project_view ;
drop view previous_project_view ;
drop view proposed_project_view ;
drop view rejected_project_view ;

create view previous_employee_view as
SELECT 
    person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	spouse,
	IsFired,
	salary,
	type

FROM Person where type = 'Previous_Employee' ;

create or replace TRIGGER previous_employee_trigger
     INSTEAD OF insert ON previous_employee_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
		first_name,
		last_name,
		home_address,
		zipcode,
		home_phone,
		us_citizen,
		spouse,
		IsFired,
		salary,
		type
		)
		 VALUES ( 
		:NEW.person_id,
		:NEW.first_name,
		:NEW.last_name,
		:NEW.home_address,
		:NEW.zipcode,
		:NEW.home_phone,
		:NEW.us_citizen,
		:NEW.spouse,
		:NEW.IsFired,
		:NEW.salary,
        'Previous_Employee') ;
END;
/

create view employee_view as
SELECT 
    person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	spouse,
	employee_id,
	salary,
	salary_exception,
	manager,
	type

FROM Person where type = 'Employee' ;

create or replace TRIGGER employee_trigger
     INSTEAD OF insert ON employee_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
		first_name,
		last_name,
		home_address,
		zipcode,
		home_phone,
		us_citizen,
		spouse,
		employee_id,
		salary,
		salary_exception,
		manager,
		type
		)
		 VALUES ( 
		:NEW.person_id,
		:NEW.first_name,
		:NEW.last_name,
		:NEW.home_address,
		:NEW.zipcode,
		:NEW.home_phone,
		:NEW.us_citizen,
		:NEW.spouse,
		:NEW.employee_id,
		:NEW.salary,
		:NEW.salary_exception,
		:NEW.manager,
        'Employee') ;
END;
/

create view project_employee_view as
SELECT 
    person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	spouse,
	employee_id,
	salary,
	salary_exception,
	manager,
	type

FROM Person where type = 'Project_Employee' ;

create or replace TRIGGER project_employee_trigger
     INSTEAD OF insert ON project_employee_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
		first_name,
		last_name,
		home_address,
		zipcode,
		home_phone,
		us_citizen,
		spouse,
		employee_id,
		salary,
		salary_exception,
		manager,
		type
		)
		 VALUES ( 
		:NEW.person_id,
		:NEW.first_name,
		:NEW.last_name,
		:NEW.home_address,
		:NEW.zipcode,
		:NEW.home_phone,
		:NEW.us_citizen,
		:NEW.spouse,
		:NEW.employee_id,
		:NEW.salary,
		:NEW.salary_exception,
		:NEW.manager,
        'Project_Employee') ;
END;
/

create view manager_view as
SELECT 
    person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	spouse,
	employee_id,
	salary,
	salary_exception,
	manager,
	bonus,
	dept_no,
	type

FROM Person where type = 'Manager' ;

create or replace TRIGGER manager_trigger
     INSTEAD OF insert ON manager_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
		first_name,
		last_name,
		home_address,
		zipcode,
		home_phone,
		us_citizen,
		spouse,
		employee_id,
		salary,
		salary_exception,
		manager,
		bonus,
		dept_no,
		type
		)
		 VALUES ( 
		:NEW.person_id,
		:NEW.first_name,
		:NEW.last_name,
		:NEW.home_address,
		:NEW.zipcode,
		:NEW.home_phone,
		:NEW.us_citizen,
		:NEW.spouse,
		:NEW.employee_id,
		:NEW.salary,
		:NEW.salary_exception,
		:NEW.manager,
		:NEW.bonus,
		:NEW.dept_no,
        'Manager') ;
END;
/

create view interim_manager_view as
SELECT 
    person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	spouse,
	employee_id,
	salary,
	salary_exception,
	manager,
	bonus,
	dept_no,
	type

FROM Person where type = 'Interim_Manager' ;

create or replace TRIGGER interim_manager_trigger
     INSTEAD OF insert ON interim_manager_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
		first_name,
		last_name,
		home_address,
		zipcode,
		home_phone,
		us_citizen,
		spouse,
		employee_id,
		salary,
		salary_exception,
		manager,
		bonus,
		dept_no,
		type
		)
		 VALUES ( 
		:NEW.person_id,
		:NEW.first_name,
		:NEW.last_name,
		:NEW.home_address,
		:NEW.zipcode,
		:NEW.home_phone,
		:NEW.us_citizen,
		:NEW.spouse,
		:NEW.employee_id,
		:NEW.salary,
		:NEW.salary_exception,
		:NEW.manager,
		:NEW.bonus,
		:NEW.dept_no,
        'Interim_Manager') ;
END;
/

create view president_view as
SELECT 
    person_id,
	first_name,
	last_name,
	home_address,
	zipcode,
	home_phone,
	us_citizen,
	spouse,
	employee_id,
	salary,
	salary_exception,
	manager,
	bonus,
	dept_no,
	type

FROM Person where type = 'President' ;

create or replace TRIGGER president_trigger
     INSTEAD OF insert ON president_view
     FOR EACH ROW
BEGIN
    insert into Person( 
		person_id,
		first_name,
		last_name,
		home_address,
		zipcode,
		home_phone,
		us_citizen,
		spouse,
		employee_id,
		salary,
		salary_exception,
		manager,
		bonus,
		dept_no,
		type
		)
		 VALUES ( 
		:NEW.person_id,
		:NEW.first_name,
		:NEW.last_name,
		:NEW.home_address,
		:NEW.zipcode,
		:NEW.home_phone,
		:NEW.us_citizen,
		:NEW.spouse,
		:NEW.employee_id,
		:NEW.salary,
		:NEW.salary_exception,
		:NEW.manager,
		:NEW.bonus,
		:NEW.dept_no,
        'President') ;
END;
/


create view current_project_view as
SELECT 
    project_id,
	manager,
	project_title,
	dept_no,
	parent_project,
	project_active,
	type

FROM Project where type = 'Current_Project' ;

create or replace TRIGGER current_project_trigger
     INSTEAD OF insert ON current_project_view
     FOR EACH ROW
BEGIN
    insert into Project( 
		project_id,
		manager,
		project_title,
		dept_no,
		parent_project,
		project_active,
		type
		)
		 VALUES ( 
		:NEW.project_id,
		:NEW.manager,
		:NEW.project_title,
		:NEW.dept_no,
		:NEW.parent_project,
		:NEW.project_active,
        'Current_Project') ;
END;
/

create view previous_project_view as
SELECT 
    project_id,
	manager,
	project_title,
	dept_no,
	parent_project,
	project_active,
	end_date_month,
	end_date_day,
	end_date_year,
	est_person_hours,
	type

FROM Project where type = 'Previous_Project' ;

create or replace TRIGGER previous_project_trigger
     INSTEAD OF insert ON previous_project_view
     FOR EACH ROW
BEGIN
    insert into Project( 
		project_id,
		manager,
		project_title,
		dept_no,
		parent_project,
		project_active,
		end_date_month,
		end_date_day,
		end_date_year,
		est_person_hours,
		type
		)
		 VALUES ( 
		:NEW.project_id,
		:NEW.manager,
		:NEW.project_title,
		:NEW.dept_no,
		:NEW.parent_project,
		:NEW.project_active,
		:NEW.end_date_month,
		:NEW.end_date_day,
		:NEW.end_date_year,
		:NEW.est_person_hours,
        'Previous_Project') ;
END;
/


create view proposed_project_view as
SELECT 
    project_id,
	manager,
	project_title,
	dept_no,
	parent_project,
	type

FROM Project where type = 'Proposed_Project' ;

create or replace TRIGGER current_project_trigger
     INSTEAD OF insert ON current_project_view
     FOR EACH ROW
BEGIN
    insert into Project( 
		project_id,
		manager,
		project_title,
		dept_no,
		parent_project,
		type
		)
		 VALUES ( 
		:NEW.project_id,
		:NEW.manager,
		:NEW.project_title,
		:NEW.dept_no,
		:NEW.parent_project,
        'Proposed_Project') ;
END;
/

create view rejected_project_view as
SELECT 
    project_id,
	manager,
	project_title,
	dept_no,
	parent_project,
	type

FROM Project where type = 'Rejected_Project' ;

create or replace TRIGGER current_project_trigger
     INSTEAD OF insert ON current_project_view
     FOR EACH ROW
BEGIN
    insert into Project( 
		project_id,
		manager,
		project_title,
		dept_no,
		parent_project,
		type,
		comment
		)
		 VALUES ( 
		:NEW.project_id,
		:NEW.manager,
		:NEW.project_title,
		:NEW.dept_no,
		:NEW.parent_project,
        'Rejected_Project',
        :NEW.comment) ;
END;
/